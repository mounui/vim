############################################################################
# VIM CHEATSHEET （VIM速查表）
# Author：mounui	http://mounui.com
# https://github.com/mounui/vim/cheatsheet.txt
# version：2.0	Last Modified：2018-05-22 22:31
############################################################################

############################################################################
# 移动命令
############################################################################

h			光标左移，同<Left>键
j			光标下移，同<Down>键
k			光标上移，同<Up>键
l			光标右移，同<Right>键
0			跳到行首，同<Home>键
$			跳到行尾，同<End>键
^			跳到从行首开始第一个非空白字符
CTRL-F			下一页
CTRL-B			上一页
CTRL-U			上移半屏
CTRL-D			下移半屏
gg			跳到第一行，同CTRL+<Home>、1G
G			跳到最后一行，同CTRL+<End>
nG			跳到第n行，eg：10G是移动到第十行
:n			跳到第n行，eg：:10<Enter>是移动到第十行
10%			移动到文件的 10% 处
15|			移动到当前行的 15列
w			跳到下一个单词的开头 （标点或空格分隔的单词）
W			跳到下一个单词的开头 （空格分隔的单词）
e			跳到下一个单词的尾部 （标点或空格分隔的单词）
E			跳到下一个单词的尾部 （空格分隔的单词）
b			跳到上一个单词的开头 （标点或空格分隔的单词）
B			跳到上一个单词的开头 （空格分隔的单词）
ge			跳到上一个单词的尾部
)			向前移动一个句子 （句号分隔）
(			向后移动一个句子 （句号分隔）
}			向前移动一个段落 （空行分隔）
{			向后移动一个段落 （空行分隔）
<Enter>			移动到下一行首个非空字符
+			移动到下一行首个非空字符
-			移动到当前行首个非空字符
H			移动到屏幕上部 （当前可视区域）
M			移动到屏幕中部 （当前可视区域）
L			移动到屏幕下部 （当前可视区域）
fx			跳转到下一个为 x 的字符 （当前行）
Fx			跳转到上一个为 x 的字符 （当前行）
tx			跳转到下一个为 x 的字符前 （当前行）
Tx			跳转到上一个为 x 的字符前 （当前行）
;			跳转到下一个 f/t 搜索的结果
,			跳转到上一个 f/t 搜索的结果
Shift-Left		按住 Shift 按左键，向左选中
Shift-Right		按住 Shift 按右键，向右选中
Shift-Up		按住 Shift 按上键，向上选中
Shift-Down		按住 Shift 按下键，向下选中
gm			移动到行中
gj			光标下移一行 （忽略自动换行）
gk			光标上移一行 （忽略自动换行）

############################################################################
# 插入命令
############################################################################

i			光标前插入
I			行首插入
a			光标后插入
A			行尾插入
o			下一行插入
O			上一行插入
gi			进入上一次插入模式的位置
<ESC>			进入命令模式
CTRL-[			进入命令模式

############################################################################
# 插入模式下
############################################################################

<Up>			光标上移
<Down>			光标下移
<Left>			光标左移
<Right>			光标右移
<PageUp>		上翻页
<PageDown>		下翻页
<Delete>		删除光标所在字符
<BS>			Backspace 向后删除字符
<Home>			光标跳转到行首
<End>			光标跳转到行尾
CTRL-W			向后删除单词
CTRL-O			临时退出插入模式，执行单条命令又返回插入模式
CTRL-R 0		将 0号剪贴板内容插入到当前光标后，CTRL-r 后跟寄存器标识
CTRL-R "		插入匿名寄存器内容，等同于 p 粘贴
CTRL-R =		插入表达式计算结果，等号后面跟表达式
CTRL-R :		插入上一次命令行命令
CTRL-R /		插入上一次搜索的关键字
CTRL-F			自动缩进
CTRL-U			删除到行首
CTRL-V {char}		插入非数字的字面量
CTRL-V {number}		插入三个数字代表的 ascii/unicode 字符
CTRL-V 065		插入 10进制 ascii 字符 （两数字） 065 即 A字符
CTRL-V x41          	插入 16进制 ascii 字符（三数字） x41 即 A字符
CTRL-V o101         	插入  8进制 ascii 字符（三数字） o101 即 A字符
CTRL-V u1234        	插入 16进制 unicode 字符（四数字）
CTRL-V U12345678    	插入 16进制 unicode 字符（八数字）
CTRL-K {ch1} {ch2}  	插入 digraph（见 :h digraph），快速输入日文或符号等

############################################################################
# 文本编辑
############################################################################

r               	替换当前字符
R               	进入替换模式，直至 ESC 离开
s               	替换字符（删除光标处字符，进入插入模式）
S               	替换行（删除当前行，进入插入模式）
c               	改写当前行
cw              	改写当前单词
ciw             	改写光标所处的单词
caw             	改写光标所处的单词，并且包括前后的空格
c0              	改写到行首
c^              	改写到行首（第一个非零字符）
c$              	改写到行尾
ci"             	改写双引号中的内容
ci'             	改写单引号中的内容
ci)             	改写小括号中的内容
ci]             	改写中括号中的内容
ci}             	改写大括号中的内容
cit             	改写 xml tag 中的内容
cis             	改写当前句子
c2w             	改写下两个单词
ct(             	改写到小括号前
x               	删除当前字符，前面附加数字
X               	向前删除字符
dd              	删除当前行
d0              	删除到行首
d^              	删除到行首（第一个非零字符）
d$              	删除到行末
D               	删除到行末
dw              	删除当期单词
diw             	删除光标所处的单词
daw             	删除光标所处的单词，包含前后空格
di"             	删除双引号中的内容
di'             	删除单引号中的内容
di)             	删除小括号中的内容
di]             	删除中括号中的内容
di}             	删除大括号中的内容
dit             	删除 xml tag 中的内容
dis             	删除当前句子
d2w             	删除下两个单词
dt(             	删除到小括号前
dgg             	删除到文件头部
dG              	删除到文件尾部
d}              	删除下一段
d{              	删除上一段
u               	撤销
U               	撤销整行操作
CTRL-R          	撤销上一次 u 命令
J               	链接多行为一行
.               	重复上一次操作
~               	替换大小写
g~iw            	替换当前单词的大小写
gUiw            	将单词转成大写
guiw            	将当前单词转成小写
guu             	全行转成小写
gUU             	全行转成大写
<<              	减少缩进
>>              	增加缩进
==              	自动缩进
CTRL-A          	增加数字
CTRL-X          	减少数字

############################################################################
# 复制粘贴
############################################################################

p               	粘贴到光标后
P               	粘贴到光标前
v               	开始标记（进入可视模式）
y               	复制标记内容
V               	开始按行标记
CTRL-V          	开始列标记
y$              	复制当前位置到本行结束的内容
yy              	复制当前行
Y               	复制当前行，同yy
yiw             	复制当前单词
3yy             	复制光标下三行内容
v0              	选中当前位置到行首
v$              	选中当前位置到行末
viw             	选中当前单词
vi)             	选中小括号中的内容
vi]             	选中中括号中的内容
vis             	选中句子中的内容
gv              	重新选择上一次选中的文字
:set paste      	允许粘贴模式（避免粘贴时自动缩进影响格式）
:set nopaste    	禁止粘贴模式
"?yy            	复制当前行到寄存器 ? ，? 代表0~9的寄存器名称
"?p             	将寄存器 ? 的内容粘贴到光标后
"?P             	将寄存器 ? 的内容粘贴到光标前
:reg            	显示所有寄存器内容
:[range]y       	复制范围，比如:20,30y 是复制20到30行，:10y 是复制第十行
:[range]d       	删除范围，比如:20,30d 是复制20到30行，:10d 是复制第十行
ddp             	交换两行内容

############################################################################
# 文本对象 - c,d,v,y 等命令后接文本对象，一般为：<范围 i/a><类型>
############################################################################

$               	到行末
0               	到行首
^               	到行首非空字符
tx              	光标位置到字符 x 之前
fx              	光标位置到字符 x 之处
iw              	整个单词（不包括分隔符）
aw              	整个单词（包括分隔符）
iW              	整个单词（不包括分隔符）
aW              	整个单词（包括分隔符
is              	整个句子（不包括分隔符）
i)              	小括号内
a)              	小括号内（包括小括号本身）
i]              	中括号内
a]              	中括号内（包括中括号本身）
i}              	大括号内
a}              	大括号内（包括大括号本身）
i'              	单引号内
a'              	单引号内（包括单引号本身）
i"              	双引号内
a"              	双引号内（包括双引号本身）
2i)             	往外两层小括号内
2a)             	往外两层小括号内（包括小括号本身）
2f)             	到第二个小括号处
2t)             	到第二个小括号前

############################################################################
# 查找替换
############################################################################

/pattern        	从光标处向文件尾搜索 pattern
?pattern        	从光标处向文件头搜索 pattern
n               	向同一方向执行上一次搜索
N               	向相反方向执行上一次搜索
*               	向前搜索光标所在处的单词
#               	向后搜索光标所在处的单词
:s/o1/o2/g      	将当前行中的 o1 全替换成 o2
:%s/o1/o2/g     	将当前文件中 o1 全替换成 o2
:%s/o1/o2/gc    	将当前文件中 o1替换成o2 每次替换需询问是否替换
:10,20s/o1/o2/g 	将第10行到20行中所有o1替换为o2
:%s/1\\2\/3/123/g 	将1\2/3替换为123 （特殊字符需使用反斜杠标注）
:%s/\r//g       	删除 DOS 换行符

############################################################################
# 可视模式
############################################################################

>               	增加缩进
<               	减少缩进
d               	删除高亮选中的文字
x               	删除高亮选中的文字
c               	改写文字，及删除高亮选中的文字并进入插入模式
s               	改写文字，及删除高亮选中的文字并进入插入模式
y               	拷贝文字
~               	转换大小写
o               	跳转到标记区的另外一端
O               	跳转到标记块的另外一端
u               	标记区转换为小写
U               	标记区转换为大写
g CTRL-G        	显示所选择区域的统计信息
<Esc>           	退出可视模式

############################################################################
# 位置跳转
############################################################################

CTRL-O          	跳转到上一个位置
CTRL-I          	跳转到下一个位置
CTRL-^          	跳转到 alternate file （当前窗口的上一个文件）
%               	跳转到匹配的括号上
gd              	跳转到局部定义（光标下的单词的定义）
gD              	跳转到全局定义（光标下的单词的定义）
gf              	打开名称为光标下文件名的文件
[[              	跳转到上一个顶层函数（比如C语言以大括号分隔）
]]              	跳转到下一个顶层函数（比如C语言以大括号分隔）
[m              	跳转到上一个成员函数
]m              	跳转到下一个成员函数
[{              	跳转到上一处未匹配的{
]}              	跳转到下一处未匹配的}
[(              	跳转到上一处未匹配的(
[)              	跳转到下一处未匹配的)
[c              	上一个不同处(diff时)
]c              	下一个不同处(diff时)
[/              	跳转到 C注释开头
]/              	跳转到 C注释结尾

############################################################################
# 文件操作
############################################################################

:w                  	保存文件
:w <filename>       	按名称保存文件
:e <filename>       	打开文件并编辑
:saveas <filename>  	另存为文件
:r <filename>       	读取文件并将内容插入到光标后
:r !dir             	将 dir 命令的输出捕获并插入到光标后
:close              	关闭文件
:q                  	退出
:q!                 	强制退出
:wa                 	保存所有文件
:cd <path>          	切换 Vim 当前路径
:pwd                	显示 Vim 当前路径
:new                	打开一个新的窗口编辑新文件
:enew               	在当前窗口创建新文件
:vnew               	在左右切分的新窗口中编辑新文件
:tabnew             	在新的标签页中编辑新文件

############################################################################
# 缓存操作
############################################################################

:ls                 	查案缓存列表
:bn                 	切换到下一个缓存
:bp                 	切换到上一个缓存
:bd                 	删除缓存
:b 1                	切换到1号缓存
:b abc              	切换到文件名为 abc 开头的缓存
:badd <filename>    	将文件添加到缓存列表
:set hidden         	设置隐藏模式（未保存的缓存可以被切换走，或者关闭）
:set nohidden       	关闭隐藏模式（未保存的缓存不能被切换走，或者关闭）
n CTRL-^            	切换缓存，先输入数字的缓存编号，再按 CTRL + 6

############################################################################
# 窗口操作
############################################################################

:sp <filename>      	上下切分窗口并在新窗口打开文件 filename
:vs <filename>      	左右切分窗口并在新窗口打开文件 filename
CTRL-W s            	上下切分窗口
CTRL-W v            	左右切分窗口
CTRL-W w            	循环切换到下一个窗口
CTRL-W W            	循环切换到上一个窗口
CTRL-W p            	跳到上一个访问过的窗口
CTRL-W c            	关闭当前窗口
CTRL-W o            	关闭其他窗口
CTRL-W h            	跳到左边的窗口
CTRL-W j            	跳到下边的窗口
CTRL-W k            	跳到上边的窗口
CTRL-W l            	跳到右边的窗口
CTRL-W +            	增加当前窗口的行高，前面可以加数字
CTRL-W -            	减少当前窗口的行高，前面可以加数字
CTRL-W <            	减少当前窗口的列宽，前面可以加数字
CTRL-W >            	增加当前窗口的列宽，前面可以加数字
CTRL-W =            	让所有窗口宽高相同
CTRL-W H            	将当前窗口移动到最左边
CTRL-W J            	将当前窗口移动到最下边
CTRL-W K            	将当前窗口移动到最上边
CTRL-W L            	将当前窗口移动到最右边
CTRL-W x            	交换窗口
CTRL-W f            	在新窗口中打开名为光标下文件名的文件
CTRL-W gf           	在新标签页中打开名为光标下文件名的文件
CTRL-W R            	旋转窗口
CTRL-W T            	将当前窗口移到新的标签页中
CTRL-W P            	跳转到预览窗口
CTRL-W z            	关闭预览窗口
CTRL-W _            	纵向最大化当前窗口
CTRL-W |            	横向最大化当前窗口

############################################################################
# 标签页
############################################################################

:tabs               	显示所有标签页
:tabe <filename>    	在新标签页中打开文件 filename
:tabn               	下一个标签页
:tabp               	上一个标签页
:tabc               	关闭当前标签页
:tabo               	关闭其他标签页
:tabn n             	切换到第n个标签页，比如 :tabn 3 切换到第三个标签页
:tabm n             	标签移动
:tabfirst           	切换到第一个标签页
:tablast            	切换到最后一个标签页
:tab help           	在标签页打开帮助
:tab drop <file>    	如果文件已被其他标签页和窗口打开则跳过去，否则新标签打开
:tab split          	在新的标签页中打开当前窗口里的文件
:tab ball           	将缓存中所有文件用标签页打开
:set showtabline=?  	设置为 0 就不显示标签页标签，1会按需显示，2会永久显示
ngt                 	切换到第n个标签页，比如 2gt 将会切换到第二个标签页
gt                  	下一个标签页
gT                  	上一个标签页

############################################################################
# 书签
############################################################################

:marks              	显示所有书签
ma                  	保存当前位置到书签 a ，书签名可以用 a-z（作用范围为文件内部）, A-Z（作用范围为所有文件） 26*2个字母
'a                  	跳转到书签 a所在的行
`a                  	跳转到书签 a所在位置
`.                  	跳转到上一次编辑的行
'A                  	跳转到全文书签 A
['                  	跳转到上一个书签
]'                  	跳转到下一个书签
'<                  	跳到上次可视模式选择区域的开始
'>                  	跳到上次可视模式选择区域的结束

############################################################################
# 常用设置
############################################################################

:set nocompatible   	设置不兼容原始 vi 模式（必须设置在最开头）
:set bs=?           	设置BS键模式，现代编辑器为 :set bs=eol,start,indent
:set sw=4           	设置缩进宽度为 4
:set ts=4           	设置制表符宽度为 4
:set noet           	设置不展开 tab 成空格
:set et             	设置展开 tab 成空格
:set winaltkeys=no  	设置 GVim 下正常捕获 ALT 键
:set nowrap         	关闭自动换行
:set ttimeout       	允许终端按键检测超时（终端下功能键为一串ESC开头的扫描码）
:set ttm=100        	设置终端按键检测超时为100毫秒
:set term=?         	设置终端类型，比如常见的 xterm
:set ignorecase     	设置搜索是否忽略大小写
:set smartcase      	智能大小写，默认忽略大小写，除非搜索内容里包含大写字母
:set list           	设置显示制表符和换行符
:set number         	设置显示行号，禁止显示行号可以用 :set nonumber
:set paste          	进入粘贴模式（粘贴时禁用缩进等影响格式的东西）
:set nopaste        	结束粘贴模式
:set spell          	允许拼写检查
:set hlsearch       	设置高亮查找
:set ruler          	总是显示光标位置
:set incsearch      	查找输入时动态增量显示查找结果
:set insertmode     	Vim 始终处于插入模式下，使用 ctrl-o 临时执行命令
:set all            	列出所有选项设置情况
:syntax on          	允许语法高亮
:syntax off         	禁止语法高亮

############################################################################
# 帮助信息
############################################################################

:h tutor            	入门文档
:h quickref         	快速帮助
:h index            	查询 Vim 所有键盘命令定义
:h summary          	帮助你更好的使用内置帮助系统
:h CTRL-H           	查询普通模式下 CTRL-H 是干什么的
:h i_CTRL-H         	查询插入模式下 CTRL-H 是干什么的
:h i_<Up>           	查询插入模式下方向键上是干什么的
:h pattern.txt      	正则表达式帮助
:h eval             	脚本编写帮助
:h function-list    	查看 VimScript 的函数列表
:h windows.txt      	窗口使用帮助
:h tabpage.txt      	标签页使用帮助
:h +timers          	显示对 +timers 特性的帮助
:h :!               	查看如何运行外部命令
:h tips             	查看 Vim 内置的常用技巧文档
:h set-termcap      	查看如何设置按键扫描码
:viusage            	NORMAL 模式帮助
:exusage            	EX 命令帮助
:version            	显示当前 Vim 的版本号和特性

############################################################################
# 外部命令
############################################################################

:!ls                	运行外部命令 ls，并等待返回
:r !ls              	将外部命令 ls 的输出捕获，并插入到光标后
:w !sudo tee %      	sudo以后保存当前文件
:call system('ls')  	调用 ls 命令，但是不显示返回内容
:!start notepad     	Windows 下启动 notepad，最前面可以加 silent
:sil !start cmd     	Windows 下当前目录打开 cmd
:%!prog             	运行文字过滤程序，如整理 json格式 :%!python -m json.tool

############################################################################
# Quickfix 窗口
############################################################################

:copen              	打开 quickfix 窗口（查看编译，grep等信息）
:copen 10           	打开 quickfix 窗口，并且设置高度为 10
:cclose             	关闭 quickfix 窗口
:cfirst             	跳到 quickfix 中第一个错误信息
:clast              	跳到 quickfix 中最后一条错误信息
:cc [nr]            	查看错误 [nr]
:cnext              	跳到 quickfix 中下一个错误信息
:cprev              	跳到 quickfix 中上一个错误信息

############################################################################
# 拼写检查
############################################################################

:set spell          	打开拼写检查
:set nospell        	关闭拼写检查
]s                  	下一处错误拼写的单词
[s                  	上一处错误拼写的单词
zg                  	加入单词到拼写词表中
zug                 	撤销上一次加入的单词
z=                  	拼写建议

############################################################################
# 代码折叠
############################################################################

za                  	切换折叠
zA                  	递归切换折叠
zc                  	折叠光标下代码
zC                  	折叠光标下所有代码
zd                  	删除光标下折叠
zD                  	递归删除所有折叠
zE                  	删除所有折叠
zf                  	创建代码折叠
zF                  	指定行数创建折叠
zi                  	切换折叠
zm                  	所有代码折叠一层
zr                  	所有代码打开一层
zM                  	折叠所有代码，设置 foldlevel=0，设置 foldenable
zR                  	打开所有代码，设置 foldlevel 为最大值
zn                  	折叠 none，重置 foldenable 并打开所有代码
zN                  	折叠 normal，重置 foldenable 并恢复所有折叠
zo                  	打开一层代码
zO                  	打开光标下所有代码折叠

############################################################################
# 宏录制
############################################################################

qa                  	开始录制名字为 a 的宏
q                   	结束录制宏
@a                  	播放名字为 a 的宏
@:                  	播放上一个宏

############################################################################
# 其他命令
############################################################################

CTRL-E              	向上卷屏
CTRL-Y              	向下卷屏
CTRL-G              	显示正在编辑的文件名，以及大小和位置信息
g CTRL-G            	显示文件的：大小，字符数，单词数和行数，可视模式下也可用
zz                  	调整光标所在行到屏幕中央
zt                  	调整光标所在行到屏幕上部
zb                  	调整光标所在行到屏幕下部
ga                  	显示光标下字符的 ascii 码或者 unicode 编码
g8                  	显示光标下字符的 utf-8 编码字节序
gi                  	回到上次进入插入的地方，并切换到插入模式
K                   	查询光标下单词的帮助
ZZ                  	保存文件（如果有改动的话），并关闭窗口
CTRL-PgUp           	上个标签页，GVim OK，部分终端软件需设置对应键盘码
CTRL-PgDown         	下个标签页，GVim OK，部分终端软件需设置对应键盘码
CTRL-R CTRL-W       	命令模式下插入光标下单词
CTRL-INSERT         	复制到系统剪贴板（GVIM）
SHIFT-INSERT        	粘贴系统剪贴板的内容（GVIM）
:set ff=unix        	设置换行为 unix
:set ff=dos         	设置换行为 dos
:set ff?            	查看换行设置
:set nohl           	清除搜索高亮
:set termcap        	查看会从终端接收什么以及会发送给终端什么命令
:set guicursor=     	解决 SecureCRT/PenguiNet 中 NeoVim 局部奇怪字符问题
:set t_RS= t_SH=    	解决 SecureCRT/PenguiNet 中 Vim8.0 终端功能奇怪字符
:set fo+=a          	开启文本段的实时自动格式化
:earlier 15m        	回退到15分钟前的文件内容
:.!date             	在当前窗口插入时间
:%!xxd              	开始二进制编辑
:%!xxd -r           	保存二进制编辑
:r !curl -sL {URL}  	读取 url 内容添加到光标后
:g/^\s*$/d          	删除空行
:g/green/d          	删除所有包含 green 的行
:v/green/d          	删除所有不包含 green 的行
:g/gladiolli/#      	搜索单词打印结果，并在结果前加上行号
:g/ab.*cd.*efg/#    	搜索包含 ab,cd 和 efg 的行，打印结果以及行号
:v/./,/./-j         	压缩空行
:Man bash           	在 Vim 中查看 man，先调用 :runtime! ftplugin/man.vim 激活
/fred\|joe          	搜索 fred 或者 joe
/\<\d\d\d\d\>       	精确搜索四个数字
/^\n\{3}            	搜索连续三个空行

